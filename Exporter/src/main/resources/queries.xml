<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
  <entry key="publicSubmissions">
    <![CDATA[
    SELECT s.relPath
      FROM Submission s,
           Submission_AccessTag sa,
           AccessTag a,
           Section se
      WHERE sa.Submission_id = s.id
        AND sa.accessTags_id = a.id
        AND a.name = 'Public'
        AND s.version > 0
        AND s.status = 'PROCESSED'
        AND s.released = true
        AND s.rootSection_id = se.id
        AND se.type = 'Study'
    ]]>
  </entry>

  <entry key="publicSubmissionsByAccNo">
    <![CDATA[
    SELECT s.relPath
      FROM Submission s,
           Submission_AccessTag sa,
           AccessTag a,
           Section se
      WHERE sa.Submission_id = s.id
        AND sa.accessTags_id = a.id
        AND a.name = 'Public'
        AND s.version > 0
        AND s.status = 'PROCESSED'
        AND s.released = true
        AND s.rootSection_id = se.id
        AND se.type = 'Study'
        AND s.accNo = :accNo
    ]]>
  </entry>

  <entry key="pendingRelease">
    <![CDATA[
    SELECT s.id subId, s.title subTitle, s.accNo subAccNo, s.RTime subReleaseTime,
           u.fullName authorFullName, u.email authorEmail
      FROM Submission s, User u
      WHERE s.owner_id = u.id
        AND s.released = false
        AND s.RTime BETWEEN :from AND :to
        AND s.version > 0
        AND s.status = 'PROCESSED'
     ]]>
  </entry>

  <entry key="releaseSubmission">
    <![CDATA[
      UPDATE Submission SET released=true where id = :subId
    ]]>
  </entry>

  <entry key="addPublicAccessTag">
    <![CDATA[
     INSERT INTO Submission_AccessTag values (:subId, 1)
    ]]>
  </entry>

  <entry key="userDropboxes">
    <![CDATA[
    SELECT id, email, secret from User where secret is not null and active = true
    ]]>
  </entry>

  <entry key="updatedSubmissionsQuery">
    SELECT id, accno, released, title, secretKey, relPath, rTime, cTime, mTime, rootSection_id, owner_id
    FROM Submission su
    WHERE version > 0 and status = 'PROCESSED' and (cTime > :sync_time or mTime > :sync_time)
  </entry>

  <entry key="submissionsQueryByAccNo">
    SELECT id, accno, released, title, secretKey, relPath, rTime, cTime, mTime, rootSection_id, owner_id
    FROM Submission su
    WHERE version > 0 and status = 'PROCESSED' and accno = :accno
  </entry>

  <entry key="deletedSubmissionsQuery">
    <![CDATA[
    SELECT s1.accno from Submission s1 WHERE s1.version < 0 and (s1.cTime > :sync_time or s1.mTime > :sync_time)
    AND NOT EXISTS (select '1' from Submission s2 where s2.accno = s1.accno and s2.version > 0)
    ]]>
  </entry>

  <entry key="submissionsQuery">
    SELECT su.id, accno, title, secretKey, released, relPath, rTime, cTime, mTime, rootSection_id, owner_id,
          (SELECT count(rf.id)
            FROM Section se, FileList fl, ReferencedFile rf
            WHERE se.submission_id = su.id AND se.fileListId = fl.id AND rf.fileListId = fl.id) refFilesCount,
          (SELECT COUNT(fr.id)
            FROM FileRef fr, Section se
            WHERE fr.sectionId = se.id AND
            se.submission_id = su.id) filesCount
    FROM Submission su
    WHERE su.version > 0 AND su.status = 'PROCESSED'
  </entry>

  <entry key="simpleSubmissionsQuery">
    SELECT su.id, accno, title, secretKey, released, relPath, rTime, cTime, mTime, rootSection_id, owner_id,
      (SELECT count(at.id)
        FROM Submission_AccessTag suat, AccessTag at
        WHERE su.id = suat.submission_id AND
          suat.accesstags_id = at.id AND
          at.name IN (:imagingProjects)) isImagingSubmission
    FROM Submission su
    WHERE su.version > 0 AND su.status = 'PROCESSED' AND cTime &lt;= 1609459199
  </entry>

  <entry key="submissionsStatsQuery">
    SELECT SUM(fr.size) submissionFilesSize, COUNT(fr.id) filesCount
    FROM FileRef fr, Submission su, Section se
    WHERE su.version > 0 AND
      su.status = 'PROCESSED' AND
      (su.rootSection_id = se.id OR se.parent_id = su.rootSection_id) AND
      fr.sectionId = se.id AND
      su.id = :submission_id
    GROUP BY su.accNo;
  </entry>

  <entry key="submissionFileListStatsQuery">
    SELECT SUM(rf.size) refFilesSize, COUNT(rf.id) refFilesCount
    FROM ReferencedFile rf, FileList fl, Submission su, Section se
    WHERE su.version > 0 AND
      su.status = 'PROCESSED' AND
      se.fileListId IS NOT NULL AND
      (su.rootSection_id = se.id OR se.parent_id = su.rootSection_id) AND
      rf.fileListId = fl.id AND
      se.fileListId = fl.id AND
      su.id = :submission_id
    GROUP BY su.accNo;
  </entry>

  <entry key="submissionsPmcQuery">
    SELECT id, accno, released, title, secretKey, relPath, rTime, cTime, mTime, rootSection_id, owner_id from Submission
    WHERE version > 0 AND status = 'PROCESSED' AND accNo LIKE 'S-EPMC%'
  </entry>

  <entry key="singleSubmissionQuery">
    SELECT id, accno, released, title, secretKey, relPath, rTime, cTime, mTime, rootSection_id, owner_id from Submission
    WHERE version > 0 AND status = 'PROCESSED' and id = :submissionId
  </entry>

  <entry key="fileAttributesQuery">
    select name, value, valueQualifierString, reference from FileAttribute where file_id = :file_id
  </entry>

  <entry key="linkAttributesQuery">
    select name, value, valueQualifierString, reference from LinkAttribute where link_id = :link_id
  </entry>

  <entry key="linksBySectionQuery">
    select id, url from Link where section_id = :section_id
  </entry>

  <entry key="sectionAttributesQuery">
    select name, value, valueQualifierString, reference from SectionAttribute where section_id = :section_id
  </entry>

  <entry key="sectionFilesQuery">
    select id, name, size, directory, path from FileRef where sectionId = :section_id
  </entry>

  <entry key="sectionFilesCountQuery">
    select count(id) from FileRef where sectionId = :section_id
  </entry>

  <entry key="sectionReferencedFilesCountQuery">
    SELECT count(rf.id)
    FROM Section se, ReferencedFile rf
    WHERE se.fileListId = rf.fileListId AND
          se.id = :section_id
  </entry>

  <entry key="sectionSectionsQuery">
    SELECT se.id, se.accno, se.type,
      (CASE
        WHEN se.fileListId IS NOT NULL THEN (SELECT fl.name FROM FileList fl WHERE se.fileListId = fl.id)
        ELSE NULL
      END) fileListName
    FROM Section se
    WHERE se.parent_id = :section_id
  </entry>

  <entry key="sectionByIdQuery">
    SELECT se.id, se.accno, se.type,
      (CASE
        WHEN se.fileListId IS NOT NULL THEN (SELECT fl.name FROM FileList fl WHERE se.fileListId = fl.id)
        ELSE NULL
      END) fileListName
    FROM Section se
    WHERE se.id = :section_id
  </entry>

  <entry key="submissionAccessTagQuery">
    select at.name from Submission_AccessTag sat, AccessTag at
    where sat.Submission_id = :submissionId and sat.accessTags_id = at.id
  </entry>

  <entry key="submissionAttributesQuery">
    select id, name, value, valueQualifierString, reference from SubmissionAttribute where submission_id = :submissionId
  </entry>

  <entry key="userEmailQuery">
    select email from User where id = :user_id
  </entry>

  <entry key="submissionPublicationQuery">
    select accNo from Section sec where sec.type = 'Publication' and sec.submission_id = :submissionId
  </entry>

  <entry key="submissionStatsQuery">
    SELECT IFNULL((SELECT value from SubmissionStat where accNo = :accNo and type = :type), 0)
  </entry>
</properties>
